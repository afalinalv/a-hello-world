Привет Мир
 
Вступление
Что такое GitHub?
Создание репозитория
Создание ветви
Сделать фиксацию
Открытие запроса по запросу
Запрос На Слияние

В Привет Мир проекта-это время-заслуженный традиции в области компьютерного программирования.
Это простое упражнение, которое заставляет вас начать учиться чему-то новому. Давайте начнем с GitHub!

Вы научитесь:

Создание и использование репозитория
Запуск и управление новой веткой
Внесите изменения в файл и нажмите их на github как фиксации
Открытие и слияние запроса по запросу

Что такое GitHub?
GitHub-это платформа для управления версиями и совместной работы. 
Это позволяет Вам и другим работать вместе над проектами из любой точки мира.

Этот учебник учит вас гитхаб необходимости, как хранилища, ветки, коммитыи запросы.
Вы создадите свой собственный репозиторий Hello World и изучите рабочий процесс запроса Github, 
популярный способ создания и просмотра кода.

Нет необходимости в кодировании
Чтобы выполнить это упражнение, вам понадобится GitHub.com учетная запись и доступ в интернет.
Вам не нужно знать, как программировать, использовать командную строку или установить Git
(на github встроено программное обеспечение для управления версиями).

Совет: открыть в данном руководстве в отдельном окне браузера (или вкладки),
так что вы можете видеть это, когда вы выполните действия, описанные в учебнике.


Шаг 1. Создание репозитория
В репозитории обычно используется для организации одного проекта. 
Репозитории могут содержать папки и файлы, изображения, видео, электронные таблицы и наборы данных – все, что нужно вашему проекту. 
Мы рекомендуем включать в ридми, или файл с информацией о вашем проекте.
GitHub позволяет легко добавить один в то же время вы создаете свой новый репозиторий. 
Он также предлагает другие распространенные варианты, такие как файл лицензии.

Ваше hello-world хранилище может быть местом, где вы храните идеи, ресурсы, или даже поделиться и обсудить с другими.

Создание нового репозитория
В верхнем правом углу, рядом с вашим аватаром или identicon, нажмите  и затем выберите новый репозиторий.
Имя вашего репозитория hello-world.
Напишите краткое описание.
Выберите инициализировать репозиторий с ридми.
new-repo-форма

Нажмите кнопку создать репозиторий. : tada:


Шаг 2. Создание ветви
Ветвление - это способ работы над различными версиями хранилища в одно время.

По умолчанию ваше хранилище имеет один филиал, имени master которого считается окончательным филиала.
Мы используем ветки экспериментировать и вносить в нее изменения, прежде чем совершать их master.

Когда вы создаете ветку с master ветки, вы делаете копию, или моментальный снимок master , как это было в тот момент.
Если кто-то другой внес изменения в master отрасли пока вы работаете на вашей ветке, вы могли бы вернуть эти обновления.

Эта Диаграмма показывает:

В master ветке
Новый филиал называется feature (потому что мы делаем ‘рабочий’ на этой ветке)
Путешествие, которое feature берет перед ним слились в master
филиал

Вы когда-нибудь сохраняли разные версии файлов? Что-то вроде:

story.txt
story-joe-edit.txt
story-joe-edit-reviewed.txt
Филиалы достигают аналогичных целей в репозиториях GitHub.

Здесь на GitHub, разработчики, писатели, дизайнеры используют ветки для учета исправления ошибок
и функции работают отдельно от наших master (производства) отделения. При изменении готов, они сливаются в своей ветке master.

Создание новой ветви
Перейти на новый репозиторий hello-world.
Щелкните раскрывающийся список в верхней части списка файлов, что говорит филиале: мастер.
Введите название ветви, readme-editsв новый филиал текстовое поле.
Выберите синюю ветку Создать окно или нажмите “Enter” на клавиатуре.
филиал gif

Теперь у вас есть две ветки, master и readme-edits. Они выглядят точно так же, но не надолго!
Далее мы добавим наши изменения в новую ветку.


Шаг 3. Вносить и фиксировать изменения
Bravo! Now, you’re on the code view for your readme-edits branch, which is a copy of master. Let’s make some edits.

Браво! Сейчас, вы находитесь на коду для вашего readme-edits филиала, который является копией master.
Давайте внесем некоторые правки.
На GitHub, сохраненные изменения называются совершает.
Каждый коммит имеет соответствующий коммит, который является описание, объясняющее, почему конкретное изменение было сделано.
Сообщения фиксации фиксируют историю ваших изменений, поэтому другие участники могут понять, что вы сделали и почему.

Вносить и фиксировать изменения
Выберите README.md файл.
Нажмите на  значок карандаша в верхнем правом углу файл для редактирования.
В редакторе напиши немного о себе.
Напишите сообщение фиксации, описывающее внесенные изменения.
Нажмите кнопку Применить изменения кнопку.
совершать

Эти изменения будут внесены только ридми файл на свой readme-edits филиал,
так что теперь эта ветвь содержит содержание, которое отличается от master.


Шаг 4. Открытие запроса по запросу
Хорошие правки! Теперь у вас есть изменения в ветке С master, вы можете открыть тяга запросу.

Pull запросы являются сердцем сотрудничества на GitHub. Когда вы открываете pull-запрос,
вы предлагаете свои изменения и с просьбой, что кто-то комментарий и тянуть в свой вклад и объединить их в своей ветке.
Запросы показывают различия, или различия, контент из обеих ветвей.
Изменения, добавления и вычитания показаны зеленым и красным цветом.

Как только вы делаете фиксацию, вы можете открыть запрос по запросу и начать обсуждение, даже до завершения кода.

С помощью GitHub по @упоминание системы в вашем тянут сообщение-запрос,
вы можете попросить обратную связь от конкретных людей или групп, будь они в коридоре или 10 часовых поясов.

Вы даже можете открыть pull запросы в вашем собственном хранилище и объединить их самостоятельно.
Это отличный способ узнать поток GitHub, прежде чем работать над более крупными проектами.

Откройте запрос на изменение README
Нажмите на изображение для большей версии

Step	Screenshot
Нажмите на  потяните запросу вкладки, а затем из выпадающего запросу страницу, Нажмите зеленую новых вытянуть запросу кнопка.	pr-tab
В примере сравнения окне выберите ветку вы сделали, readme-edits, чтобы сравнить с master (Оригинал).	филиал
Просмотрите свои изменения в diff на странице сравнить, убедитесь, что они являются тем, что вы хотите отправить.	разность
Когда вы будете удовлетворены, что эти изменения, которые вы хотите отправить,
нажмите на большую зеленую создать pull-запрос кнопку.create-pull
Дайте вашему запросу название и напишите краткое описание ваших изменений.
Когда вы закончите с вашим сообщением, нажмите кнопку Создать pull-запрос!
Tip: You can use emoji and drag and drop images and gifs onto comments and Pull Requests.


Шаг 5. Слияние запроса Pull
В этот последний шаг, это время, чтобы привести свой изменения вместе – слияние вашего readme-edits филиала в master филиал.

Нажмите на зеленую слияния pull-запрос кнопку, чтобы объединить изменения в master.
Нажмите кнопку Подтвердить слияние.
Идти вперед и удалить ветку, с момента ее изменения были включены, с удалить ветку кнопку в фиолетовом поле.
поглощать Удалить

Празднуем!
Завершив этот учебник, вы научились создавать проект и делать запрос по запросу на github! : tada: : octocat: :убить:

Вот что вы сделали в этом уроке:

Создание репозитория с открытым исходным кодом
Запуск и управление новой веткой
Изменил файл и зафиксировал эти изменения в GitHub
Открытие и слияние запроса Pull
Взгляните на ваш профиль на GitHub и вы увидите ваш новый вклад квадратов!

Чтобы узнать больше о силе запросы, то рекомендую почитать на GitHub потока руководство.
Вы также можете посетить гитхаб исследовать и ввязываться в проект с открытым кодом : octocat:

Совет: проверьте наши другие руководства, канал на YouTube и обучение по требованию подробнее о том, как начать с GitHub.

Последнее обновление апрель 7, 2016

15.10.2018 

Гитхаб - это лучший способ создавать и поставлять программное обеспечение.
Мощное сотрудничество, обзор кода и управление кодом для открытых и частных проектов.

